return {
	-- 	{
	-- 		"nvim-telescope/telescope.nvim",
	-- 		tag = "0.1.5",
	-- 		dependencies = {
	-- 			"nvim-lua/plenary.nvim",
	-- 			{ "nvim-telescope/telescope-fzf-native.nvim", build = "make" },
	-- 		},
	-- 		config = function()
	-- 			require("telescope").setup({
	-- 				extensions = {
	-- 					fzf = {},
	-- 				},
	-- 			})
	-- 			local builtin = require("telescope.builtin")
	-- 			vim.keymap.set("n", "<leader>sh", builtin.help_tags, { desc = "[S]earch [H]elp" })
	-- 			vim.keymap.set("n", "<leader>sk", builtin.keymaps, { desc = "[S]earch [K]eymaps" })
	-- 			vim.keymap.set("n", "<leader>sf", builtin.find_files, { desc = "[S]earch [F]iles" })
	-- 			vim.keymap.set("n", "<leader>ss", builtin.builtin, { desc = "[S]earch [S]elect Telescope" })
	-- 			vim.keymap.set("n", "<leader>sw", builtin.grep_string, { desc = "[S]earch current [W]ord" })
	-- 			vim.keymap.set("n", "<leader>sg", builtin.live_grep, { desc = "[S]earch by [G]rep" })
	-- 			vim.keymap.set("n", "<leader>sd", builtin.diagnostics, { desc = "[S]earch [D]iagnostics" })
	-- 			vim.keymap.set("n", "<leader>sr", builtin.resume, { desc = "[S]earch [R]esume" })
	-- 			vim.keymap.set("n", "<leader>s.", builtin.oldfiles, { desc = '[S]earch Recent Files ("." for repeat)' })
	-- 			vim.keymap.set("n", "<leader><leader>", builtin.buffers, { desc = "[ ] Find existing buffers" })
	-- 		end,
	-- 	},
	-- 	{
	-- 		"nvim-telescope/telescope-ui-select.nvim",
	-- 		config = function()
	-- 			require("telescope").setup({
	-- 				extensions = {
	-- 					["ui-select"] = {
	-- 						require("telescope.themes").get_dropdown({}),
	-- 					},
	-- 				},
	-- 			})
	-- 			require("telescope").load_extension("ui-select")
	-- 		end,
	-- 	},
}
